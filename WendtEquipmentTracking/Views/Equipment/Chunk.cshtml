@model IEnumerable<EquipmentModel>
@if (Html.UserIsInRole(UserRoles.ReadWrite))
{
    foreach (var item in Model)
    {<tr class="text-nowrap @(item.Status == SuccessStatus.Error ? "danger" : "") ">
            @if (item.BillOfLadingEquipments != null && item.BillOfLadingEquipments.Count() > 0)
            {
                <td data-toggle="collapse" data-id="@(item.EquipmentId)" class="expand text-center"><span class="glyphicon glyphicon-plus text-primary"></span></td>
            }
            else
            {
                <td></td>
            }
            <td data-search="@(item.IsHardware)" data-sort="@(item.IsHardware)">
                @if (item.HardwareKitEquipments != null && item.HardwareKitEquipments.Count() > 0)
                {
                @Html.HiddenFor(modelItem => item.IsHardware)

                @Html.DisplayFor(modelItem => item.IsHardware) <br />
                @("Associated To Hardware Kit " + item.HardwwareKitEquipment.HardwareKit.HardwareKitNumber)

                }
                else if (item.BillOfLadingEquipments != null && item.BillOfLadingEquipments.Count() > 0)
                {
                @Html.HiddenFor(modelItem => item.IsHardware)
                @Html.DisplayFor(modelItem => item.IsHardware)
                }
                else if (item.HardwareKit != null)
                {
                @Html.HiddenFor(modelItem => item.IsHardware)
                @Html.DisplayFor(modelItem => item.IsHardware)
                }
                else
                {
                @Html.CheckBoxFor(modelItem => item.IsHardware)
                }

            </td>
            <td data-search="@item.EquipmentName" data-sort="@item.EquipmentName">
                @Html.HiddenFor(modelItem => item.EquipmentId)

                @if (item.IsHardware || item.HardwareKit != null)
                {
                @Html.EditorFor(modelItem => item.EquipmentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                else
                {
                @Html.EditorFor(modelItem => item.EquipmentName, new { htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(modelItem => item.EquipmentName, "", new { @class = "text-danger" })


            </td>
            <td data-search="@item.Priority" data-sort="@item.Priority">
                @Html.DropDownListFor(modelItem => item.Priority, new SelectList(Priorities.GetPriorities()), new { @class = "form-control" })
                @Html.ValidationMessageFor(modelItem => item.Priority, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.ReleaseDate" data-sort="@item.ReleaseDate">
                @Html.EditorFor(modelItem => item.ReleaseDate, new { htmlAttributes = new { @class = "form-control datePicker", id = "releaseDate" + item.EquipmentId } })
                @Html.ValidationMessageFor(modelItem => item.ReleaseDate, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.DrawingNumber" data-sort="@item.DrawingNumber">
                @Html.EditorFor(modelItem => item.DrawingNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.DrawingNumber, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.WorkOrderNumber" data-sort="@item.WorkOrderNumber">
                @Html.EditorFor(modelItem => item.WorkOrderNumber, new { htmlAttributes = new { @class = "form-control autocomplete" } })
                @Html.ValidationMessageFor(modelItem => item.WorkOrderNumber, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.Quantity" data-sort="@item.Quantity">
                @if (item.HardwareKit != null)
                {
                @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                else
                {
                @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                }

                @Html.ValidationMessageFor(modelItem => item.Quantity, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.ShippingTagNumber" data-sort="@item.ShippingTagNumber">
                @Html.EditorFor(modelItem => item.ShippingTagNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.ShippingTagNumber, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.Description" data-sort="@item.Description" class="long-column">
                @Html.EditorFor(modelItem => item.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.Description, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.UnitWeight" data-sort="@item.UnitWeight" class="@item.Indicators.UnitWeightColor">
                @Html.EditorFor(modelItem => item.UnitWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.UnitWeight, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.TotalWeight">
                @Html.HiddenFor(modelItem => item.TotalWeight)
                @item.TotalWeight
            </td>
            <td data-search="@item.TotalWeightShipped">
                @Html.HiddenFor(modelItem => item.TotalWeightShipped)
                @item.TotalWeightShipped
            </td>
            <td data-search="@item.ReadyToShip" data-sort="@item.ReadyToShip" class="@item.Indicators.ReadyToShipColor">
                @Html.EditorFor(modelItem => item.ReadyToShip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.ReadyToShip, "", new { @class = "text-danger" })
            </td>
            <td class="@item.Indicators.ShippedQtyColor">
                @Html.HiddenFor(modelItem => item.ShippedQuantity)
                @item.ShippedQuantity
            </td>
            <td class="@item.Indicators.LeftToShipColor">
                @Html.HiddenFor(modelItem => item.LeftToShip)
                @item.LeftToShip
            </td>
            <td class="@item.Indicators.FullyShippedColor">
                @Html.HiddenFor(modelItem => item.FullyShipped)
                @if (item.FullyShipped.HasValue && item.FullyShipped.Value == true)
                {
                @:Yes
            }
                else if (item.FullyShipped.HasValue && item.FullyShipped.Value == false)
                {
                @:No
            }
                else
                {
                @:NA
            }
            </td>
            <td class="@item.Indicators.CustomsValueColor">
                @Html.HiddenFor(modelItem => item.CustomsValue)
                @item.CustomsValue
            </td>
            <td class="@item.Indicators.SalePriceColor">
                @Html.HiddenFor(modelItem => item.SalePrice)
                @item.SalePrice
            </td>
            <td data-search="@item.Notes" data-sort="@item.Notes">
                @Html.EditorFor(modelItem => item.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.Notes, "", new { @class = "text-danger" })
            </td>
            <td data-search="@item.AutoShipFile" data-sort="@item.AutoShipFile">
                @Html.HiddenFor(modelItem => item.AutoShipFile)
                @item.AutoShipFile
            </td>
            <td data-search="@item.SalesOrderNumber" data-sort="@item.SalesOrderNumber" class="@item.Indicators.SalesOrderNumberColor">
                @Html.HiddenFor(modelItem => item.SalesOrderNumber)
                @item.SalesOrderNumber
            </td>
            <td class="text-nowrap">
                @if (item.HardwareKit == null)
                {
                @Ajax.ActionLink("Delete", "Delete", new { id = item.EquipmentId }, new AjaxOptions { Confirm = "Are you sure you want to delete this equipment record?", OnSuccess = "DeleteSuccess", HttpMethod = "POST" })
                }
            </td>
        </tr>}
}
else
{
    foreach (var item in Model)
    {<tr class="text-nowrap">
        @if (item.BillOfLadingEquipments != null && item.BillOfLadingEquipments.Count() > 0)
                {
            <td data-toggle="collapse" data-id="@(item.EquipmentId)" class="expand text-center"><span class="glyphicon glyphicon-plus text-primary"></span></td>
        }
        else
        {
            <td></td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.IsHardware)
            @if (item.HardwareKitEquipments != null && item.HardwareKitEquipments.Count() > 0)
            {
                <br />
                @("Associated To Hardware Kit " + item.HardwwareKitEquipment.HardwareKit.HardwareKitNumber)
            }
        </td>
        <td>
            @item.EquipmentName
        </td>
        <td>
            @item.Priority
        </td>
        <td>
            @item.ReleaseDate.Value.ToShortDateString()
        </td>
        <td>
            @item.DrawingNumber
        </td>
        <td>
            @item.WorkOrderNumber
        </td>
        <td>
            @item.Quantity
        </td>
        <td>
            @item.ShippingTagNumber
        </td>
        <td class="long-column">
            @item.Description
        </td>
        <td class="@item.Indicators.UnitWeightColor">
            @item.UnitWeight
        </td>
        <td>
            @item.TotalWeight
        </td>
        <td>
            @item.TotalWeightShipped
        </td>
        <td class="@item.Indicators.ReadyToShipColor">
            @item.ReadyToShip
        </td>
        <td class="@item.Indicators.ShippedQtyColor">
            @item.ShippedQuantity
        </td>
        <td class="@item.Indicators.LeftToShipColor">
            @item.LeftToShip
        </td>
        <td class="@item.Indicators.FullyShippedColor">
            @if (item.FullyShipped.HasValue && item.FullyShipped.Value == true)
            {
                @:Yes
                    }
            else if (item.FullyShipped.HasValue && item.FullyShipped.Value == false)
            {
                @:No
                    }
            else
            {
                @:NA
                    }
        </td>
        <td class="@item.Indicators.CustomsValueColor">
            @item.CustomsValue
        </td>
        <td class="@item.Indicators.SalePriceColor">
            @item.SalePrice
        </td>
        <td>
            @item.Notes
        </td>
        <td>
            @item.AutoShipFile
        </td>
        <td class="@item.Indicators.SalesOrderNumberColor">
            @item.SalesOrderNumber
        </td>
    </tr>}
}